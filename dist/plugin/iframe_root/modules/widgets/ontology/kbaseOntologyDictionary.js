define(["jquery","./colorbrewer/colorbrewer","kb_service/client/workspace","uuid","datatables_bootstrap","kbaseUI/widget/legacy/authenticatedWidget","kbaseUI/widget/legacy/kbaseTable"],(e,a,t,s)=>{
"use strict"
;const i=[[/(EC:([\\w.-]+))/,"<a target = '_blank' href = 'http://enzyme.expasy.org/EC/$2'>$1</a>"],[/(PMID:([\\w.-]+))/,"<a target = '_blank' href = 'http://www.ncbi.nlm.nih.gov/pubmed/$2'>$1</a>"],[/(GOC:([\\w.-]+))/,"<a target = '_blank' href = 'http://www.geneontology.org/doc/GO.curator_dbxrefs'>$1</a>"],[/(Wikipedia:([\\w.-]+))/,"<a target = '_blank' href = 'https://en.wikipedia.org/wiki/$2'>$1</a>"],[/(Reactome:([\\w.-]+))/,"<a target = '_blank' href = 'http://www.reactome.org/content/query?q=$2'>$1</a>"],[/(KEGG:([\\w.-]+))/,"<a target = '_blank' href = 'http://www.genome.jp/dbget-bin/www_bget?rn:$2'>$1</a>"],["(RHEA:([\\w.-]+))","<a target = '_blank' href = 'http://www.rhea-db.org/reaction?id=$2'>$1</a>"],[/(MetaCyc:([\\w.-]+))/,"<a target = '_blank' href = 'http://biocyc.org/META/NEW-IMAGE?type=NIL&object=$2'>$1</a>"],[/(UM-BBD_reactionID:([\\w.-]+))/,"<a target = '_blank' href = 'http://eawag-bbd.ethz.ch/servlets/pageservlet?ptype=r&reacID=$2'>$1</a>"],[/(UM-BBD_enzymeID:([\\w.-]+))/,"<a target = '_blank' href = 'http://eawag-bbd.ethz.ch/servlets/pageservlet?ptype=ep&enzymeID=$2'>$1</a>"],[/(UM-BBD_pathwayID:([\\w.-]+))/,"<a target = '_blank' href = 'http://eawag-bbd.ethz.ch/$2/$2_map.html'>$1</a>"],[/(RESID:([\\w.-]+))/,"<a target = '_blank' href = 'http://pir.georgetown.edu/cgi-bin/resid?id=$2'>$1</a>"],[/(PO_GIT:([\\w.-]+))/,"<a target = '_blank' href = 'https://github.com/Planteome/plant-ontology/issues/$2'>$1</a>"],[/(TO_GIT:([\\w.-]+))/,"<a target = '_blank' href = 'https://github.com/Planteome/plant-trait-ontology/issues/$2'>$1</a>"],[/(GC_ID:([\\w.-]+))/,"<a target = '_blank' href = 'http://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi#SG$2'>$1</a>"]]
;e.KBWidget({name:"KBaseOntologyDictionary",parent:"kbaseAuthenticatedWidget",
version:"1.0.0",options:{dictionaryMap:{GO:"gene_ontology",
SSO:"seed_subsystem_ontology"}},extractLink:function(e){if(void 0===e)return e
;for(const[a,t]in i)e=e.replace(a,t);return e},init:function(s){
this._super(s),this.colors=a.Set2[8],
this.colorMap={},this.termCache={},this.ws=new t(this.runtime.config("services.workspace.url"),{
token:this.runtime.service("session").getAuthToken()});const i={
included:["/format_version","/data_version","/date","/saved_by","/auto_generated_by","/subsetdef","/synonymtypedef","/default_namespace","/treat_xrefs_as_differentia","/treat_xrefs_as_is_a","/ontology","/term_hash/*/id","/term_hash/*/name","/term_hash/*/namespace","/typedef_hash/"]
};if(this.options.workspaceId)i.wsid=this.options.workspaceId;else{
if(!this.options.workspaceName)throw new Error("Workspace id or name required")
;i.workspace=this.options.workspaceName}
if(this.options.objectId)i.objid=this.options.objectId;else{
if(!this.options.objectName)throw new Error("Object id or name required")
;i.name=this.options.objectName}return this.ws.get_object_subset([i]).then(a=>{
var t=a[0].data;this.dataset=t;var s=this.data("metaElem");s.empty()
;var i=e.jqElem("div").kbaseTable({allowNullRows:!1,structure:{keys:[{
value:"format-version",label:"Format version"},{value:"data-version",
label:"Data version"},{value:"date"},{value:"saved-by",label:"Saved By"},{
value:"auto-generated-by",label:"Auto Generated By"},{value:"default-namespace",
label:"Default Namespace"},{value:"ontology",label:"ontology"}],rows:{
"format-version":t.format_version,"data-version":t.data_version,date:t.date,
"saved-by":t.saved_by,"auto-generated-by":t.auto_generated_by,
"default-namespace":t.default_namespace,ontology:t.ontology}}})
;s.append(i.$elem);var n=this.data("typeDefElem"),r=[]
;e.each(t.typedef_hash||{},(a,t)=>{var s=e.jqElem("div").kbaseTable({structure:{
keys:Object.keys(t).sort().map(e=>({value:e,label:e,style:"width : 200px"})),
rows:t},striped:!1});r.push([t.name||"",s.$elem.html()])}),n.DataTable({
columns:[{title:"TypeDef",class:"ontology-top"},{title:"Info"}]
}).rows.add(r).draw();var o=[];e.each(t.term_hash,(e,a)=>{
o.push([a,a.name,[a.id,a.name,a.namespace].join(",")])
}),this.data("tableElem").DataTable({columns:[{title:"Term ID",
class:"ontology-top"},{title:"Term name"},{title:"Search field",visible:!1}],
createdRow:(a,t)=>{var s=e("td",a).eq(0);s.empty(),s.append(this.termLink(t[0]))
;var i=e("td",a).eq(1),n=this.colorMap[t[0].namespace]
;void 0===n&&(n=this.colorMap[t[0].namespace]=this.colors.shift()),
i.css("color",n)}
}).rows.add(o).draw(),this.data("colorMapElem").append("Ontology namespace key: "),
e.each(this.colorMap,(a,t)=>{
this.data("colorMapElem").append(e.jqElem("span").css("padding-left","25px").css("color",t).append(a))
});const l=location.href.match(/term_id=([^&]+)/)
;l&&this.appendTerm(l[1]),this.options.term_id&&this.appendTerm(this.options.term_id),
this.data("loaderElem").hide(),this.data("globalContainerElem").show()
}).catch(e=>{
this.$elem.empty(),this.$elem.addClass("alert alert-danger").html("Could not load object : "+e.error.message)
}),this.appendUI(this.$elem),this},termLink:function(a,t){
return e.jqElem("a").append(a.id+(t?" ["+a.name+"]":"")).on("click",e=>{
e.preventDefault(),this.appendTerm(a.id)})},getTerm:function(e){
return this.dataset.term_hash[e]},parseISA:function(a){const t=[]
;return e.each(a,(e,a)=>{const s=a.split(/\s*!\s*/);t.push(s[0])}),t},
getLineage:function(a,t,s){if(void 0===s&&(s={}),!s[a]){s[a]=1
;var i=this.getTerm(a),n={}
;if(i.is_a)return e.each(this.parseISA(i.is_a),(e,a)=>{n[a]=void 0
}),e.each(n,e=>{n[e]=this.getLineage(e,!0,s)}),n}},buildLineageElem:function(a){
if(!a)return""
;var t=e.jqElem("ul").css("padding-left","10px").css("list-style-position","inside"),s={
root:t,parent:t};return e.each(a,(a,i)=>{var n=e.jqElem("li");t.append(n)
;var r=this.getTerm(a)
;n.append(this.termLink(r)),n.append(" "),n.append(e.jqElem("span").css("color",this.colorMap[r.namespace]).append(r.name)),
void 0!==i&&((s=this.buildLineageElem(i)).parent.append(t),s.parent=t)}),s},
lineageAsNodes:function(a,t,s,i,n,r){
return void 0===s&&(s=[]),void 0===i&&(i=[]),
void 0===n&&(n={}),void 0===r&&(r=0),void 0===n[a]&&(s.push({node:a,tag:a,
color:this.colorMap[this.getTerm(a).namespace]
}),n[a]=s.length-1),e.each(t,(e,t)=>{void 0===n[e]&&(s.push({name:e,tag:e,
color:this.colorMap[this.getTerm(e).namespace]}),n[e]=s.length-1),i.push({
source:n[a],target:n[e],charge:-100*r
}),void 0!==t&&this.lineageAsNodes(e,t,s,i,n,r+1)}),{nodes:s,edges:i}},
appendTerm:function(e){var a=this.data("termElem")
;if(a.empty(),this.data("termContainerElem").show(),
this.data("metaContainerElem").find(".panel-heading").find("i").removeClass("fa-rotate-90"),
this.data("metaContainerElem").find(".panel-body").collapse("hide"),
this.data("containerElem").find(".panel-heading").find("i").removeClass("fa-rotate-90"),
this.data("containerElem").find(".panel-body").collapse("hide"),
this.data("typeDefContainerElem").find(".panel-heading").find("i").removeClass("fa-rotate-90"),
this.data("typeDefContainerElem").find(".panel-body").collapse("hide"),
void 0===this.termCache[e]){
a.append(this.data("loaderElem")),this.data("loaderElem").show();const t={
included:["/term_hash/"+e+"/*"]}
;if(this.options.workspaceId)t.wsid=this.options.workspaceId;else{
if(!this.options.workspaceName)throw new Error("Workspace id or name required")
;t.workspace=this.options.workspaceName}
if(this.options.objectId)t.objid=this.options.objectId;else{
if(!this.options.objectName)throw new Error("Object id or name required")
;t.name=this.options.objectName}this.ws.get_object_subset([t]).then(t=>{
var s=t[0].data.term_hash[e];this.termCache[e]=s,this.data("loaderElem").hide(),
a.empty(),this.reallyAppendTerm(s)}).catch(e=>{var a
;console.error(e),e.message?a=e.message:e.error&&(a=e.error.message),
this.$elem.empty(),
this.$elem.addClass("alert alert-danger").html("Could not load object : "+a)})
}else this.reallyAppendTerm(this.termCache[e])},reallyAppendTerm:function(a){
var t,s=this.data("termElem"),i=this.getLineage(a.id)
;if(t=this.buildLineageElem(i)){t.root.css("padding-left","0px")
;var n=this.lineageAsNodes(a.id,i)
;n.nodes[0].stroke="yellow",e.jqElem("div").css({width:"500px",height:"500px"
}).kbaseForcedNetwork({linkDistance:150,dataset:n})}var r=void 0
;if(void 0!==a.relationship_closure)for(var o in r=e.jqElem("ul").css("style","float : left"),
a.relationship_closure){r.append(e.jqElem("li").append(o+" relationships"))
;var l=e.jqElem("ul");r.append(l),e.each(a.relationship_closure[o],(a,t)=>{
var s=this.getTerm(t[0])
;l.append(e.jqElem("li").append(t[1]+" away - ").append(this.termLink(s)).append(" - ").append(e.jqElem("span").css("color",this.colorMap[s.namespace]).append(s.name)))
})}var d=e.jqElem("div");void 0!==a.relationship&&e.each(a.relationship,(e,a)=>{
var t=a.split(/ ! /)
;this.extractLink(t[0]),d.append(t[0]).append(" ! ").append(t[1]).append("<br>")
});var p=e.jqElem("div").kbaseTable({allowNullRows:!1,structure:{keys:[{
value:"id",label:"ID"},"name","def","namespace","synonym","comment",{
value:"is_a",label:"Is A"},"relationship","xref"],rows:{id:a.id,name:a.name,
def:this.extractLink(e.isArray(a.def)?a.def.join("<br>"):a.def),
namespace:a.namespace,
synonym:e.isArray(a.synonym)?a.synonym.join("<br>"):a.synonym,comment:a.comment,
is_a:r?e.jqElem("div").append(r):void 0,relationship:a.relationship?d:void 0,
xref:this.extractLink(e.isArray(a.xref)?a.xref.join("<br>"):a.xref)}}})
;s.append(p.$elem)},appendUI:function(a){
a.append(e.jqElem("style").text(".ontology-top { vertical-align : top }"))
;var t=e.jqElem("div").append("<br>&nbsp;Loading data...<br>&nbsp;please wait...<br>&nbsp;Data parsing may take upwards of 30 seconds, during which time this page may be unresponsive.").append(e.jqElem("br")).append(e.jqElem("div").attr("align","center").append(e.jqElem("i").addClass("fa fa-spinner").addClass("fa fa-spin fa fa-4x")))
;this.data("loaderElem",t),a.append(t)
;var s=this.data("globalContainerElem",e.jqElem("div").css("display","none"))
;a.append(s)
;var i=this.data("metaElem",e.jqElem("div")),n=this.createContainerElem("Overview",[i])
;this.data("metaContainerElem",n),s.append(n)
;var r=e.jqElem("table").addClass("display").addClass("table table-striped").css({
width:"100%",border:"1px solid #ddd"});this.data("tableElem",r)
;var o=this.data("colorMapElem",e.jqElem("div")),l=this.createContainerElem("Term Dictionary",[r,o])
;this.data("containerElem",l),s.append(l)
;var d=this.data("termElem",e.jqElem("div")),p=this.createContainerElem("Term",[d],"none")
;this.data("termContainerElem",p),s.append(p)
;var h=this.data("typeDefElem",e.jqElem("table").addClass("display")).css({
width:"100%",border:"1px solid #ddd"
}),m=this.createContainerElem("Type Definitions",[h]).css("display","none")
;return this.data("typeDefContainerElem",m),s.append(m),a},
createContainerElem:function(a,t,i){
const n=new s(4).format(),r=new s(4).format()
;var o=e.jqElem("div").addClass("panel-body collapse in")
;return e.each(t,(function(e,a){o.append(a)
})),e.jqElem("div").addClass("panel panel-default").css("display",i).append(e.jqElem("div").addClass("panel-heading").attr("id",n).attr("role","tab").on("click",(function(){
e(this).next().collapse("toggle"),e(this).find("i").toggleClass("fa-rotate-90")
})).append(e.jqElem("h4").addClass("panel-title").append(e.jqElem("span").attr("data-toggle","collapse").attr("data-target","#"+r).attr("aria-expanded","true").attr("aria-controls","#"+r).css("cursor","pointer").append(e.jqElem("span").text(a).css("margin-left","10px"))))).append(e.jqElem("div").addClass("panel-collapse collapse in").attr("id",r).attr("role","tabpanel").attr("aria-expanded","true").append(o))
}})});